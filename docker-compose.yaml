services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_app
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - jupyter

  gradio:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gradio_ui
    command: python gradio_ui.py
    ports:
      - "7860:7860"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:7860"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - fastapi

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jupyter_dev
    command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8888"]
      interval: 30s
      timeout: 10s
      retries: 3

  tests:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: test_runner
    command: python test_unittests.py
    depends_on:
      - fastapi

  supabase:
    container_name: supabase_db
    ports:
      - "54321:5432" # Base de datos
      - "54322:54322" # Studio (opcional)
    env_file:
      - .env
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
    volumes:
      - supabase_data:/var/lib/postgresql/data # This is postgres default data directory
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"] # Postgres integrated test to check if supabase is receiving and connecting to requests appropriately
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  supabase_data: